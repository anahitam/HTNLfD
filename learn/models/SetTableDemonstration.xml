<taskModel about="urn:disco.wpi.edu:htnlfd:std" xmlns="http://www.cs.wpi.edu/~rich/cetask/cea-2018-ext">

	<task id="Place"> 
		<input name="referenceFrame" type="PhysObj"/>
		<input name="object" type="PhysObj" modified="newObject"/>		
		<output name="newObject" type="PhysObj"/>
		
		<binding slot="$this.external" value="false"/>
		<!--<postcondition> success() </postcondition>-->
		<script> 
			$this.newObject.name = $this.object.name;
			$this.newObject.location = new Location(
			$this.object.location.x + $this.referenceFrame.location.x,
			$this.object.location.y + $this.referenceFrame.location.y,
			$this.object.location.z + $this.referenceFrame.location.z);
		</script>	
		
		
	</task>
	

	<task id="Demonstration"/>
	
	<task id="Reset"> 
		<script> 
			PhysObj.DinnerPlate.location.x = 0;
			PhysObj.DinnerPlate.location.y = 0;
			PhysObj.DinnerPlate.location.z = 0;
			
			PhysObj.SaladPlate.location.x = 0;
			PhysObj.SaladPlate.location.y = 0;
			PhysObj.SaladPlate.location.z = 1;
			
			PhysObj.SoupBowl.location.x = 0;
			PhysObj.SoupBowl.location.y = 0;
			PhysObj.SoupBowl.location.z = 2;
			
			PhysObj.Fork.location.x = -1;
			PhysObj.Fork.location.y = 0;
			PhysObj.Fork.location.z = 0;
			
			PhysObj.Spoon.location.x = 1;
			PhysObj.Spoon.location.y = 0;
			PhysObj.Spoon.location.z = 0;
			
			PhysObj.Knife.location.x = 2;
			PhysObj.Knife.location.y = 0;
			PhysObj.Knife.location.z = 0;
			
			PhysObj.WaterGlass.location.x = -1;
			PhysObj.WaterGlass.location.y = 1;
			PhysObj.WaterGlass.location.z = 0;
			
			PhysObj.WineGlass.location.x = 1;
			PhysObj.WineGlass.location.y = 1;
			PhysObj.WineGlass.location.z = 0;
			
			PhysObj.SquareTable.location.x = 10;
			PhysObj.SquareTable.location.y = 10;
			PhysObj.SquareTable.location.z = 10;
		</script>	
		
	</task>

	<script init="true">
	
		// define Location class
		function Location (x,y,z) {
			this.x = x;
			this.y = y;
			this.z = z;
		}
		Location.prototype.toString = function () { return "X:"+this.x+" Y:"+this.y+" Z:"+this.z; }
		
		// define PhysObj class

		function PhysObj (name, location) {
			this.name = name;
			this.location = location;
		}

		PhysObj.prototype.toString = function () { return this.name + " Location: " + this.location.toString(); }
		function find (obj) { 
			return "PhysObj."+obj.name; 
		}
		
		PhysObj.DinnerPlate = new PhysObj("DinnerPlate", new Location(0,0,0));
		PhysObj.SaladPlate = new PhysObj("SaladPlate", new Location(0,0,1));
		PhysObj.SoupBowl = new PhysObj("SoupBowl", new Location(0,0,2));
			
		PhysObj.Fork = new PhysObj("Fork", new Location(-1,0,0));
		PhysObj.Spoon = new PhysObj("Spoon", new Location(1,0,0));
		PhysObj.Knife = new PhysObj("Knife", new Location(2,0,0));
			
		PhysObj.WaterGlass = new PhysObj("WaterGlass", new Location(-1,1,0));
		PhysObj.WineGlass = new PhysObj("WineGlass", new Location(1,1,0));
				
		PhysObj.SquareTable = new PhysObj("SquareTable", new Location(10,10,10)); 
	
		function success(){
			var x=Math.random();
			return x > 0.2; 
		}		
	</script>
	
</taskModel>
