<taskModel about="urn:disco.wpi.edu:htnlfd:std" xmlns="http://www.cs.wpi.edu/~rich/cetask/cea-2018-ext">

	<task id="Place"> 
		<input name="referenceFrame" type="PhysObj"/>
		<input name="object" type="PhysObj" modified="newObject"/>	
		<input name="location" type="Packages.edu.wpi.htnlfd.table.Location"/>
		<output name="newObject" type="PhysObj"/>		
		
		<binding slot="$this.external" value="false"/>
		<!--<postcondition> success() </postcondition> -->
		<script> 
			$this.newObject.name = $this.object.name;
			$this.newObject.location.x = $this.location.x + $this.referenceFrame.location.x;
			$this.newObject.location.y = $this.location.y + $this.referenceFrame.location.y;
			$this.newObject.location.z = $this.location.z + $this.referenceFrame.location.z;
		</script>
	
	</task>

	<task id="Demonstration"/>

	<script init="true">
	
		function location (x,y,z) { 
			return new Packages.edu.wpi.htnlfd.table.Location(x,y,z); 
		}
		
		// define PhysObj class

		function PhysObj (name, location) {
			this.name = name;
			this.location = location;
		}

		PhysObj.prototype.toString = function () { return this.name; }
		function find (obj) { 
			if(obj instanceof PhysObj)
				return "PhysObj."+obj.name;
		}
		function Reset(){
			PhysObj.DinnerPlate = new PhysObj("DinnerPlate", location(-10,-10,-10));
			PhysObj.SaladPlate = new PhysObj("SaladPlate", location(-10,-10,-10));
			PhysObj.SoupBowl = new PhysObj("SoupBowl", location(-10,-10,-10));
				
			PhysObj.Fork = new PhysObj("Fork", location(-10,-10,-10));
			PhysObj.Spoon = new PhysObj("Spoon", location(-10,-10,-10));
			PhysObj.Knife = new PhysObj("Knife", location(-10,-10,-10));
				
			PhysObj.WaterGlass = new PhysObj("WaterGlass", location(-10,-10,-10));
			PhysObj.WineGlass = new PhysObj("WineGlass", location(-10,-10,-10));
					
			PhysObj.SquareTable = new PhysObj("SquareTable", location(10,10,10)); 
		}
		Reset()

	</script>
	
</taskModel>
