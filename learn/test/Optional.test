#
# In this example we will see optional steps (MinOccurs) 
#
    # 11-Nov-2013 3:47:23 PM - TaskEngine 1.5.1 / Disco 1.7.1
    Welcome to Disco! (Type 'help' for command list)
  > cd models
    D:\GitHub\HTNLfD\learn\models
  > load SetTableDemonstration.xml
  > 
#
# First demonstration of PlaceDishes 
#
  > task Demonstration
    User says "Let's achieve Demonstration."
    Agent says "Ok."
  > task Place / PhysObj.DinnerPlate / location(0,0,0) / PhysObj.SquareTable
    User says "Please place DinnerPlate at [0,0,0] wrt SquareTable."
    Agent place DinnerPlate at [0,0,0] wrt SquareTable.
    Agent says "Ok."
  > task Place / PhysObj.SaladPlate / location(0,0,1) / PhysObj.DinnerPlate
    User says "Please place SaladPlate at [0,0,1] wrt DinnerPlate."
    Agent place SaladPlate at [0,0,1] wrt DinnerPlate.
    Agent says "Ok."
  > task Place / PhysObj.SoupBowl / location(0,0,2) / PhysObj.DinnerPlate
    User says "Please place SoupBowl at [0,0,2] wrt DinnerPlate."
    Agent place SoupBowl at [0,0,2] wrt DinnerPlate.
    Agent says "Ok."
  > done Demonstration
    User says "Achieve Demonstration is done."
    Agent says "Ok."
  > eval Packages.edu.wpi.htnlfd.Init.learn($disco,"PlaceDishes1")
    # Returned 'null'
  > print PlaceDishes1 urn:disco.wpi.edu:htnlfd:setTable1

<task id="PlaceDishes1" xmlns="http://www.cs.wpi.edu/~rich/cetask/cea-2018-ext">
    <input modified="place1_newObject" name="place1_object" type="PhysObj"/>
    <input name="place1_location" type="Packages.edu.wpi.htnlfd.table.Location"/>
    <input name="place1_referenceFrame" type="PhysObj"/>
    <input modified="place2_newObject" name="place2_object" type="PhysObj"/>
    <input name="place2_location" type="Packages.edu.wpi.htnlfd.table.Location"/>
    <input name="place2_referenceFrame" type="PhysObj"/>
    <input modified="place3_newObject" name="place3_object" type="PhysObj"/>
    <input name="place3_location" type="Packages.edu.wpi.htnlfd.table.Location"/>
    <output name="place1_newObject" type="PhysObj"/>
    <output name="place2_newObject" type="PhysObj"/>
    <output name="place3_newObject" type="PhysObj"/>
#
# We don't have any optional steps here 
#
    <subtasks id="placeDishes11" ordered="false">
      <step name="place1" task="std:Place"/>
      <step name="place2" requires="place1" task="std:Place"/>
      <step name="place3" requires="place1" task="std:Place"/>
      <binding slot="$place3.referenceFrame" value="$this.place2_referenceFrame"/>
      <binding slot="$this.place1_location" value="location(0,0,0)"/>
      <binding slot="$place1.location" value="$this.place1_location"/>
      <binding slot="$this.place1_referenceFrame" value="PhysObj.SquareTable"/>
      <binding slot="$place2.location" value="$this.place2_location"/>
      <binding slot="$place3.location" value="$this.place3_location"/>
      <binding slot="$this.place3_object" value="PhysObj.SoupBowl"/>
      <binding slot="$place2.object" value="$this.place2_object"/>
      <binding slot="$this.place2_location" value="location(0,0,1)"/>
      <binding slot="$this.place1_object" value="PhysObj.DinnerPlate"/>
      <binding slot="$place1.referenceFrame" value="$this.place1_referenceFrame"/>
      <binding slot="$this.place3_newObject" value="$place3.newObject"/>
      <binding slot="$this.place2_object" value="PhysObj.SaladPlate"/>
      <binding slot="$this.place1_newObject" value="$place1.newObject"/>
      <binding slot="$place1.object" value="$this.place1_object"/>
      <binding slot="$this.place2_referenceFrame" value="PhysObj.DinnerPlate"/>
      <binding slot="$this.place3_location" value="location(0,0,2)"/>
      <binding slot="$place2.referenceFrame" value="$this.place2_referenceFrame"/>
      <binding slot="$place3.object" value="$this.place3_object"/>
      <binding slot="$this.place2_newObject" value="$place2.newObject"/>
    </subtasks>
  </task>

  > 
  > 
#
# Second demonstration of PlaceDishes without Placing SoupBowl 
#
  > task Demonstration
    User says "Let's achieve Demonstration."
    Agent says "Ok."
  > task Place / PhysObj.DinnerPlate / location(0,0,0) / PhysObj.SquareTable
    User says "Please place DinnerPlate at [0,0,0] wrt SquareTable."
    Agent place DinnerPlate at [0,0,0] wrt SquareTable.
    Agent says "Ok."
  > task Place / PhysObj.SaladPlate / location(0,0,1) / PhysObj.DinnerPlate
    User says "Please place SaladPlate at [0,0,1] wrt DinnerPlate."
    Agent place SaladPlate at [0,0,1] wrt DinnerPlate.
    Agent says "Ok."
  > done Demonstration
    User says "Achieve Demonstration is done."
    Agent says "Ok."
  > eval Packages.edu.wpi.htnlfd.Init.learn($disco,"PlaceDishes2")
    # Returned 'null'
  > print PlaceDishes1 urn:disco.wpi.edu:htnlfd:setTable2
#
# Printing the first task 
#
<task id="PlaceDishes1" xmlns="http://www.cs.wpi.edu/~rich/cetask/cea-2018-ext">
    <input modified="place1_newObject" name="place1_object" type="PhysObj"/>
    <input name="place1_location" type="Packages.edu.wpi.htnlfd.table.Location"/>
    <input name="place1_referenceFrame" type="PhysObj"/>
    <input modified="place2_newObject" name="place2_object" type="PhysObj"/>
    <input name="place2_location" type="Packages.edu.wpi.htnlfd.table.Location"/>
    <input name="place2_referenceFrame" type="PhysObj"/>
    <input modified="place3_newObject" name="place3_object" type="PhysObj"/>
    <input name="place3_location" type="Packages.edu.wpi.htnlfd.table.Location"/>
    <output name="place1_newObject" type="PhysObj"/>
    <output name="place2_newObject" type="PhysObj"/>
    <output name="place3_newObject" type="PhysObj"/>
    <subtasks id="placeDishes11" ordered="false">
      <step name="place1" task="std:Place"/>
      <step name="place2" requires="place1" task="std:Place"/>
#
# Optional step (minOccurs=0) 
#
      <step minOccurs="0" name="place3" requires="place1" task="std:Place"/>
      <binding slot="$place3.referenceFrame" value="$this.place2_referenceFrame"/>
      <binding slot="$this.place1_location" value="location(0,0,0)"/>
      <binding slot="$place1.location" value="$this.place1_location"/>
      <binding slot="$this.place1_referenceFrame" value="PhysObj.SquareTable"/>
      <binding slot="$place2.location" value="$this.place2_location"/>
      <binding slot="$place3.location" value="$this.place3_location"/>
      <binding slot="$this.place3_object" value="PhysObj.SoupBowl"/>
      <binding slot="$place2.object" value="$this.place2_object"/>
      <binding slot="$this.place2_location" value="location(0,0,1)"/>
      <binding slot="$this.place1_object" value="PhysObj.DinnerPlate"/>
      <binding slot="$place1.referenceFrame" value="$this.place1_referenceFrame"/>
      <binding slot="$this.place3_newObject" value="$place3.newObject"/>
      <binding slot="$this.place2_object" value="PhysObj.SaladPlate"/>
      <binding slot="$this.place1_newObject" value="$place1.newObject"/>
      <binding slot="$place1.object" value="$this.place1_object"/>
      <binding slot="$this.place2_referenceFrame" value="PhysObj.DinnerPlate"/>
      <binding slot="$this.place3_location" value="location(0,0,2)"/>
      <binding slot="$place2.referenceFrame" value="$this.place2_referenceFrame"/>
      <binding slot="$place3.object" value="$this.place3_object"/>
      <binding slot="$this.place2_newObject" value="$place2.newObject"/>
    </subtasks>
  </task>

  > 
#
# Executing PlaceDishes1 
#
  > task PlaceDishes
java.lang.IllegalArgumentException: Unknown task id PlaceDishes
at edu.wpi.cetask.Shell.processTask(Shell.java:525)
  > 
  > task PlaceDishes1 urn:disco.wpi.edu:htnlfd:setTable2
    User says "Let's achieve {urn:disco.wpi.edu:htnlfd:setTable2}PlaceDishes1 on DinnerPlate and [0,0,0] and SquareTable and SaladPlate and [0,0,1] and DinnerPlate and SoupBowl and [0,0,2]."
    Agent place DinnerPlate at [0,0,0] wrt SquareTable.
    Agent place SaladPlate at [0,0,1] wrt DinnerPlate.
#
# Optional Step 
#
    Agent says "Should I place SoupBowl at [0,0,2] wrt DinnerPlate?"
  > 
  > say
[1] Yes.
[2] No.
[3] Stop achieve {urn:disco.wpi.edu:htnlfd:setTable2}PlaceDishes1 on DinnerPlate and [0,0,0] and SquareTable and SaladPlate and [0,0,1] and DinnerPlate and SoupBowl and [0,0,2] producing DinnerPlate and SaladPlate.
[4] Let's achieve Demonstration.
[5] Let's achieve {urn:disco.wpi.edu:htnlfd:setTable1}PlaceDishes1.
  >> 2
    User says "No."
    Agent says "Ok."
  > quit
    
