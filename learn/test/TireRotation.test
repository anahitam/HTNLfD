#
# Problem: problem with nested elements. Please see below.
#
    # Jan 29, 2014 1:43:03 PM - TaskEngine 1.5.5 / Disco 1.7.6
    Welcome to Disco! (Type 'help' for command list)
#
# Loading primitive actions
#
  > cd models
    /home/anahita/Desktop/MyProject/GitHub/HTNLfD/learn/models
  > load TireRotationPrimitives.xml\
#
# Loading "Demonstration" task. since you said that TireRotationPrimitives.xml is just for ROS primitives, 
# I created another file called "TireRotationDem.xml" for the Demonstration tasks(now I just have "Demonstration" task
# in this file).
#
  > load TireRotationDem.xml
  > 
#
# Demonstration of "UnscrewStud"
#
  > task Demonstration
    Human says "Let's achieve Demonstration."
    Robot says "Ok."
  > task Unscrew / $world.MyCar.LFwheel.studA
#
# I don't have putDown since I cannot bind the output of one task to the input of another task. I will find a way to do that later.
#
    Human says "Please execute Unscrew on $world.MyCar.LFwheel.StudA."
    Robot execute Unscrew on $world.MyCar.LFwheel.StudA producing $world.MyCar.LFwheel.getNut().
    Robot says "Ok."
  > done Demonstration
    Human says "Achieve Demonstration succeeded ."
    Robot says "Ok."
  > eval Packages.edu.wpi.htnlfd.Init.learn($disco,"UnscrewStud")
    # Returned 'null'
#
# Robot learned the UnscrewStud task.
#
  > print UnscrewStud urn:disco.wpi.edu:htnlfd:tireRotation1

  <task id="UnscrewStud" xmlns="http://www.cs.wpi.edu/~rich/cetask/cea-2018-ext">
    <input name="unscrew1_stud" type="Stud"/>
    <output name="unscrew1_nut" type="Nut"/>
    <subtasks id="unscrewStudA">
      <step name="unscrew1" task="TireRotationPrimitives:Unscrew"/>
      <binding slot="$this.unscrew1_nut" value="$unscrew1.nut"/>
      <binding slot="$this.unscrew1_stud" value="$world.MyCar.LFwheel.StudA"/>
      <binding slot="$unscrew1.stud" value="$this.unscrew1_stud"/>
    </subtasks>
  </task>

UnscrewStud@primitive = false

  > 
#
# Demonstration of "UnscrewWheel"
#
  > task Demonstration
    Human says "Let's achieve Demonstration."
    Robot says "Ok."
  > task UnscrewStud / $world.MyCar.LFwheel.studA
    Human says "Let's achieve UnscrewStud on $world.MyCar.LFwheel.StudA."
    Robot says "Ok."
  > task UnscrewStud / $world.MyCar.LFwheel.studB
    Human says "Let's achieve UnscrewStud on $world.MyCar.LFwheel.StudB."
    Robot execute Unscrew on $world.MyCar.LFwheel.StudB producing $world.MyCar.LFwheel.getNut().
    Robot says "Ok."
  > task UnscrewStud / $world.MyCar.LFwheel.studC
    Human says "Let's achieve UnscrewStud on $world.MyCar.LFwheel.StudC."
    Robot execute Unscrew on $world.MyCar.LFwheel.StudC producing $world.MyCar.LFwheel.getNut().
    Robot says "Ok."
  > done Demonstration
    Human says "Achieve Demonstration succeeded ."
    Robot says "Ok."
  > eval Packages.edu.wpi.htnlfd.Init.learn($disco,"UnscrewWheel")
WARNING: redefining task model urn:disco.wpi.edu:htnlfd:tell
    # Returned 'null'
#
# Robot couldn't learn the UnscrewWheel task correctly(one step is missing). 
# Below we can see in the history, why this happened.
#
  > print UnscrewWheel urn:disco.wpi.edu:htnlfd:tireRotation2

  <task id="UnscrewWheel" xmlns="http://www.cs.wpi.edu/~rich/cetask/cea-2018-ext">
    <input name="unscrewStud1_unscrew1_stud" type="Stud"/>
    <input name="unscrewStud2_unscrew1_stud" type="Stud"/>
    <output name="unscrewStud1_unscrew1_nut" type="Nut"/>
    <output name="unscrewStud2_unscrew1_nut" type="Nut"/>
    <subtasks id="unscrewWheelA">
      <step name="unscrewStud1" task="tireRotation1:UnscrewStud"/>
      <step name="unscrewStud2" task="tireRotation1:UnscrewStud"/>
      <binding slot="$this.unscrewStud1_unscrew1_stud" value="$world.MyCar.LFwheel.StudA"/>
      <binding slot="$unscrewStud1.unscrew1_stud" value="$this.unscrewStud1_unscrew1_stud"/>
      <binding slot="$this.unscrewStud2_unscrew1_stud" value="$world.MyCar.LFwheel.StudC"/>
      <binding slot="$this.unscrewStud2_unscrew1_nut" value="$unscrewStud2.unscrew1_nut"/>
      <binding slot="$unscrewStud2.unscrew1_stud" value="$this.unscrewStud2_unscrew1_stud"/>
      <binding slot="$this.unscrewStud1_unscrew1_nut" value="$unscrewStud1.unscrew1_nut"/>
    </subtasks>
  </task>

UnscrewWheel@primitive = false

  > 
  > 
  > history
#
# History
#
[Achieve Demonstration] -accepted -succeeded
   Human says "Let's achieve Demonstration."
   Robot says "Ok."
   [Robot execute Unscrew on $world.MyCar.LFwheel.StudA producing $world.MyCar.LFwheel.getNut()] -accepted -done
      Human says "Please execute Unscrew on $world.MyCar.LFwheel.StudA."
      Robot execute Unscrew on $world.MyCar.LFwheel.StudA producing $world.MyCar.LFwheel.getNut().
      Robot says "Ok."
   Human says "Achieve Demonstration succeeded ."
   Robot says "Ok."
[Achieve Demonstration] -accepted -succeeded <-focus
   Human says "Let's achieve Demonstration."
   Robot says "Ok."
   [Achieve {urn:disco.wpi.edu:htnlfd:tireRotation1}UnscrewStud on $world.MyCar.LFwheel.StudA] -accepted
      Human says "Let's achieve UnscrewStud on $world.MyCar.LFwheel.StudA."
      Robot says "Ok."
#
# Why is this step inside the previous step? Why do the Robot said "Ok" instead of executing the Unscrew action?
#
      [Achieve {urn:disco.wpi.edu:htnlfd:tireRotation1}UnscrewStud on $world.MyCar.LFwheel.StudB producing $world.MyCar.LFwheel.getNut()] -accepted -done -interruption
         Human says "Let's achieve UnscrewStud on $world.MyCar.LFwheel.StudB."
         Robot execute Unscrew on $world.MyCar.LFwheel.StudB producing $world.MyCar.LFwheel.getNut().
   Robot says "Ok."
   [Achieve {urn:disco.wpi.edu:htnlfd:tireRotation1}UnscrewStud on $world.MyCar.LFwheel.StudC producing $world.MyCar.LFwheel.getNut()] -accepted -done
      Human says "Let's achieve UnscrewStud on $world.MyCar.LFwheel.StudC."
      Robot execute Unscrew on $world.MyCar.LFwheel.StudC producing $world.MyCar.LFwheel.getNut().
      Robot says "Ok."
   Human says "Achieve Demonstration succeeded ."
   Robot says "Ok."

  > status

[Achieve Demonstration] -accepted -succeeded <-focus
   Human says "Let's achieve Demonstration."
   Robot says "Ok."
   [Achieve {urn:disco.wpi.edu:htnlfd:tireRotation1}UnscrewStud on $world.MyCar.LFwheel.StudA] -accepted
   Robot says "Ok."
   [Achieve {urn:disco.wpi.edu:htnlfd:tireRotation1}UnscrewStud on $world.MyCar.LFwheel.StudC producing $world.MyCar.LFwheel.getNut()] -accepted -done
   Human says "Achieve Demonstration succeeded ."
   Robot says "Ok."

  > 
  > 
  > quit
    
